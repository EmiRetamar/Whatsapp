Object subclass: #Celular	instanceVariableNames: 'app numero servicioMovil modelo ubicacion contactos duenio'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!Celular methodsFor: 'accessing' stamp: 'FeliArana 6/27/2017 13:40'!contactos	^ contactos asSortedCollection: [ :contacto :otroContacto | (self duenio cantidadNuevosMensajesDe: (self buscarChatCon: contacto)) asInteger > (self duenio cantidadNuevosMensajesDe: (self buscarChatCon: otroContacto)) asInteger ]! !!Celular methodsFor: 'rendering' stamp: 'FeliArana 6/20/2017 01:49'!agregarContacto: unUsuario	(contactos includes: unUsuario)		ifFalse: [ contactos add: unUsuario ]! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/7/2017 13:36'!borrarContacto: unUsuario	contactos remove: unUsuario.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/16/2017 15:05'!inicializarConNumero: anInteger modelo: aString  conServicio: unServicioMovil	numero := anInteger.	modelo := aString.	ubicacion := (1 to: 1000) atRandom.	servicioMovil := unServicioMovil.	contactos := OrderedCollection new.	self instalarWhatsapp.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/15/2017 15:26'!whatsapp	^ app.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/9/2017 14:50'!habilitarInternetMovil	internetMovil := true.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/9/2017 14:50'!deshabilitarInternetMovil	internetMovil := false.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:08'!instalarWhatsapp	^ self subclassResponsibility.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/9/2017 15:19'!agregarApp: unaApp	app := unaApp.! !!Celular methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:10'!inicializarConNumero: anInteger modelo: aString  conServicio: unServicioMovil duenio: unUsuario.	numero := anInteger.	modelo := aString.	duenio := unUsuario.	ubicacion := (1 to: 1000) atRandom.	servicioMovil := unServicioMovil.	contactos := OrderedCollection new.	self instalarWhatsapp.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/17/2017 23:53'!buscarChatCon: unUsuario	^self whatsapp buscarChatCon: unUsuario.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 12:58'!crearChatCon: colUsuarios	^ self whatsapp crearChatCon: colUsuarios.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 16:23'!agregarMensaje: unTexto para: chatActual	self whatsapp agregarMensaje: unTexto para:chatActual.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/16/2017 14:47'!poseeInternet	^ servicioMovil poseeInternet! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/7/2017 12:38'!poseeWhatsapp"Aquí app podría ser una colección de apps, pero nos centramos en consultar sobre Whatsapp. Lo ideal sería utilizar el patrón Strategy para que el usuario pueda elegir la aplicación que quiera usar en el momento"	^ (app isKindOf: Whatsapp)! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/20/2017 01:42'!contactosConWhatsapp	| contactosWhatsapp |	contactosWhatsapp := self contactos select: [ :contacto | contacto celular poseeWhatsapp ].	contactosWhatsapp isEmpty		ifTrue: [ ^ nil ]		ifFalse: [ ^ contactosWhatsapp ]! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/9/2017 15:04'!modelo	^ modelo.! !!Celular methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/22/2017 11:35'!numero	^ numero.! !!Celular methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:10'!duenio	^ duenio.! !!Celular methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:41'!chats	^ self whatsapp chats.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Celular class	instanceVariableNames: ''!!Celular class methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:06'!numero: anInteger modelo: aString conServicio: unServicioMovil.	^ self new inicializarConNumero: anInteger modelo: aString conServicio: unServicioMovil! !!Celular class methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:23'!numero: anInteger modelo: aString conServicio: unServicioMovil duenio: unUsuario.	^ self new inicializarConNumero: anInteger modelo: aString conServicio: unServicioMovil duenio: unUsuario.! !Celular subclass: #CelularAvanzado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!CelularAvanzado methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:10'!instalarWhatsapp	self agregarApp: (WhatsappAvanzado newFrom: self).! !Celular subclass: #CelularBasico	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!CelularBasico methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:10'!instalarWhatsapp	self agregarApp: (WhatsappBasico newFrom: self).! !Object subclass: #Chat	instanceVariableNames: 'mensajes miembros'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!Chat methodsFor: 'accesing' stamp: 'FelipeAarana 6/14/2017 13:13'!miembros	^ miembros! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/21/2017 00:38'!mensajesNoLeidosPor: unUsuario	^ mensajes reject: [ :mensaje | mensaje fueVistoPor: unUsuario ]! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 11:48'!agregarMensaje: mensaje	mensajes add: mensaje.	! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/20/2017 21:46'!ponerVistoPor: unUsuario.	self mensajes do: [ :mensaje | mensaje agregarVistoPor: unUsuario ]! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 14:44'!nombreChatPara: unUsuario	^ self subclassResponsibility.! !!Chat methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:29'!initialize	miembros := OrderedCollection new.	mensajes := OrderedCollection new.	! !!Chat methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 12:58'!agregarMiembro: unUsuario.	miembros add: unUsuario.! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/30/2017 14:38'!sacarUsuario: unUsuario	^ self subclassResponsibility.! !!Chat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/27/2017 12:53'!todosLosMiembrosMenos: usuario	^ miembros reject:[:m | m nombreUsuario = usuario nombreUsuario].! !!Chat methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:16'!mensajes	^ mensajes.! !Chat subclass: #ChatGrupal	instanceVariableNames: 'admin nombreGrupo fotoGrupo'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!ChatGrupal methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 14:45'!nombreChatPara: unUsuario	^ self nombreGrupo.! !!ChatGrupal methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 15:17'!initializeConAdmin: unUsuario miembros: colUsuarios.	super initialize.	admin := unUsuario.	miembros := colUsuarios.! !!ChatGrupal methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/30/2017 14:47'!sacarUsuario: unUsuario"Quita al miembro del chat. Si no esta en la coleccion de miembros, entonces es admin."	miembros remove: unUsuario! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!admin: anObject	admin := anObject! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!nombreGrupo	^ nombreGrupo! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!nombreGrupo: anObject	nombreGrupo := anObject! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!admin	^ admin! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!fotoGrupo	^ fotoGrupo! !!ChatGrupal methodsFor: 'accessing' stamp: 'FelipeArana 6/26/2017 16:55'!fotoGrupo: anObject	fotoGrupo := anObject! !!ChatGrupal methodsFor: 'initialization' stamp: 'FelipeArana 6/26/2017 16:53'!initializeConAdmin: unUsuario miembros: colUsuarios nombreGrupo: unString fotoGrupo: unStringDireccion.	super initialize.	admin := unUsuario.	miembros := colUsuarios.	nombreGrupo:= unString.	fotoGrupo:= unStringDireccion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ChatGrupal class	instanceVariableNames: ''!!ChatGrupal class methodsFor: 'instance creation' stamp: 'FelipeArana 6/26/2017 17:00'!newConAdmin: unUsuario miembros: colUsuarios nombreGrupo: unString fotoGrupal: unStringDireccion.	^ self new initializeConAdmin: unUsuario miembros: colUsuarios nombreGrupo: unString fotoGrupo: unStringDireccion.! !Chat subclass: #ChatNormal	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!ChatNormal methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 14:44'!nombreChatPara: unUsuario	^(self miembros reject: [ :user | user nombreUsuario = unUsuario nombreUsuario ]) first nombreUsuario! !Object subclass: #Mensaje	instanceVariableNames: 'texto usuarioOrigen horaEnviado vistoPor esImagen'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!Mensaje methodsFor: 'accessing' stamp: 'FeliArana 6/21/2017 12:03'!vistoPor	^vistoPor! !!Mensaje methodsFor: 'accessing' stamp: 'FeliArana 6/30/2017 14:41'!texto: unString	texto:= unString.	! !!Mensaje methodsFor: 'accessing' stamp: 'FeliArana 6/21/2017 12:04'!esImagen	^ esImagen! !!Mensaje methodsFor: 'accessing' stamp: 'FeliArana 6/18/2017 00:16'!horaEnviado	^horaEnviado.! !!Mensaje methodsFor: 'as yet unclassified' stamp: 'FelipeArana 5/16/2017 16:59'!texto	^ texto.	! !!Mensaje methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/22/2017 11:27'!usuarioOrigen	^ usuarioOrigen.	! !!Mensaje methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/21/2017 00:25'!agregarVistoPor: unUsuario	unUsuario = usuarioOrigen		ifFalse: [ vistoPor at: unUsuario put: DateAndTime now asTime asString ]! !!Mensaje methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 14:57'!fueVistoPor: unUsuario	"Mensaje posee un Diccionario llamado vistoPor, el cual sus claves son usuarios y el valor de ellos es la hora. Significa el horario en el que un usuario vio este mensaje (verificando que no sea el creador)"	"El mensaje retorna si unUsuario leyó el mensaje""	unUsuario = usuarioOrigen		ifFalse: [ ^ vistoPor keys includes: unUsuario ]		ifTrue: [ ^ true ]"		^ vistoPor keys includes: unUsuario! !!Mensaje methodsFor: 'initialization' stamp: 'FeliArana 7/4/2017 15:00'!initializeTexto: unTexto usuarioOrigen: unUsuario	| superFecha |	superFecha := Date today ddmmyyyy ,' ',((DateAndTime now) asTime ) asString.	horaEnviado := superFecha truncate:15.	texto:= unTexto.	usuarioOrigen := unUsuario.	vistoPor := Dictionary new.	vistoPor at: unUsuario put: DateAndTime now asTime asString! !Mensaje subclass: #MensajeImagen	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!MensajeImagen methodsFor: 'initialization' stamp: 'FeliArana 7/4/2017 13:58'!initializeTexto: unNombre usuarioOrigen: unUsuario	super initializeTexto: unNombre usuarioOrigen: unUsuario.	esImagen := true.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MensajeImagen class	instanceVariableNames: ''!!MensajeImagen class methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 13:52'!imagen: nombreImagen usuarioOrigen: usuarioOrigen.	^ self new initializeTexto: nombreImagen usuarioOrigen: usuarioOrigen! !Mensaje subclass: #MensajeTexto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!MensajeTexto methodsFor: 'initialization' stamp: 'FeliArana 7/4/2017 13:58'!initializeTexto: unNombre usuarioOrigen: unUsuario	super initializeTexto: unNombre usuarioOrigen: unUsuario.	esImagen := false.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MensajeTexto class	instanceVariableNames: ''!!MensajeTexto class methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 13:56'!texto: unTexto usuarioOrigen: usuarioOrigen	^ self new initializeTexto: unTexto usuarioOrigen: usuarioOrigen.! !Object subclass: #ServicioMovil	instanceVariableNames: 'costoLlamada nombre internetMovil'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!ServicioMovil methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/27/2017 11:14'!nombre: unNombre costoLlamada: unNumero poseeInternet: unBooleano.	nombre:= unNombre.	costoLlamada := unNumero.	internetMovil := unBooleano.! !!ServicioMovil methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/27/2017 11:13'!poseeInternet	^ internetMovil.! !!ServicioMovil methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 18:43'!nombreServicio: aString	nombre:= aString.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ServicioMovil class	instanceVariableNames: ''!!ServicioMovil class methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/27/2017 09:03'!nombre: unNombre costoLlamada: unNumero poseeInternet: unBooleano.	^ (self new) nombre: unNombre costoLlamada: unNumero poseeInternet: unBooleano.! !Object subclass: #Usuario	instanceVariableNames: 'celular nombreUsuario'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/28/2017 22:07'!fotoPerfil: unStringDireccion	^ self celular whatsapp fotoPerfil: unStringDireccion.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/7/2017 13:36'!borrarContacto: unUsuario	celular borrarContacto: unUsuario.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/28/2017 22:07'!fotoPerfil	^ self celular whatsapp fotoPerfil.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 12:57'!initializeConNombre: unNombre	nombreUsuario := unNombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliYemi 4/27/2017 11:52'!celular	^celular.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/7/2017 12:34'!contactos	^ self celular contactos.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/17/2017 22:06'!buscarChatCon: unUsuario	^self celular buscarChatCon: unUsuario! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 13:26'!nombreUsuario: unNombre	nombreUsuario := unNombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:09'!celular: unCelular	celular:= unCelular.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliYemi 5/9/2017 14:53'!agregarContacto: unUsuario	celular agregarContacto: unUsuario.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 12:56'!nombreUsuario	^ nombreUsuario! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 15:32'!crearGrupoCon: colUsuarios nombreGrupo: unString fotoGrupo: unStringDireccion	^ self celular whatsapp armarGrupoCon: colUsuarios nombreGrupo: unString fotoGrupo: unStringDireccion! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/27/2017 13:00'!cantidadNuevosMensajesDe: unChat	^self celular whatsapp cantidadNuevosMensajesDe: unChat.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/20/2017 01:24'!contactosConWhatsapp	^ self celular contactosConWhatsapp.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 12:59'!crearChatCon: colUsuarios	^ self celular crearChatCon: colUsuarios.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 16:23'!agregarMensaje: unTexto para: chatActual	self celular agregarMensaje: unTexto para:chatActual.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/7/2017 15:16'!chats	^ self celular chats.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 12:57'!nombreUsuario: unNombre	^ self new initializeConNombre: unNombre! !Object subclass: #Whatsapp	instanceVariableNames: 'celular notificaciones modelosAceptados chats fotoPerfil'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/28/2017 22:08'!fotoPerfil: unStringDireccion	fotoPerfil:= unStringDireccion.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/30/2017 14:54'!armarGrupoCon: colUsuarios nombreGrupo: unString fotoGrupo: unStringDireccion	"Crea el chat grupal y notifica a los usuarios, agregandole el chat"	| nuevoChatGrupal |	nuevoChatGrupal := ChatGrupal		newConAdmin: self celular duenio		miembros: colUsuarios		nombreGrupo: unString		fotoGrupal: unStringDireccion.	self inicializarChatGrupal: nuevoChatGrupal aUsuarios: colUsuarios.	^ nuevoChatGrupal! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/28/2017 22:07'!fotoPerfil	^fotoPerfil! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/27/2017 09:09'!initialize"dictionarys o instancias de chatnormal y chat groupal?"	chats := OrderedCollection new.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/8/2017 16:45'!contactosWhatsapp	^ self celular contactosConWhatsapp.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:02'!celular	^ celular.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/26/2017 17:08'!crearChatCon: colUsuarios	colUsuarios size > 1		ifTrue: [ ^ self				armarGrupoCon: colUsuarios				nombreGrupo: 'Editar nombre grupo'				fotoGrupo: 'imagenes/default.png' ]		ifFalse: [ ^ self armarChatCon: colUsuarios first ]! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/27/2017 13:08'!cantidadNuevosMensajesDe: unChat	| res |	res := unChat mensajesNoLeidosPor: self celular duenio.	^ res size	"	| chts resultado |	chts := self chatsIndividuales select: [ :cht | cht miembros includes: unChat ].	chts isNotEmpty		ifTrue: [ resultado := chts first mensajesNoLeidosPor: self celular duenio.			^ resultado size ]		ifFalse: [ ^ 0 ]."! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 5/27/2017 10:16'!initializeConCelular: unCelular."dictionarys o instancias de chatnormal y chat groupal?"	chats := OrderedCollection new.	celular := unCelular.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 15:15'!buscarChatCon: unUsuario	| chatBuscado |	"Chats individuales es una coleccion con los chats con dos miembros. Es decir, un chat normal"	chatBuscado := self chatsIndividuales select: [ :chat | chat miembros includes: unUsuario ].	chatBuscado isEmpty		ifTrue: [ ^ self crearChatCon: (OrderedCollection with: unUsuario) ]		ifFalse: [ chatBuscado first.			chatBuscado first ponerVistoPor: self celular duenio.			^ chatBuscado first ]! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 13:43'!agregarMensaje: unTexto para: unChat	| mensaje |	mensaje := MensajeTexto texto: unTexto usuarioOrigen: (self celular duenio).	unChat agregarMensaje: mensaje.! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 15:32'!armarChatCon: unUsuario"Creo la conversacion entre el duenio del celular y unUsuario destino"	| chat |	chat := ChatNormal new.	chat agregarMiembro: (self celular duenio).	chat agregarMiembro: unUsuario.	self chats add: chat.	unUsuario chats add: chat.	^ chat! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 15:18'!inicializarChatGrupal: nuevoChatGrupal aUsuarios: unaColeccionDeUsuarios.	unaColeccionDeUsuarios do:[ :usuario | (usuario chats) add: nuevoChatGrupal ].! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/18/2017 00:01'!chatsIndividuales	^ self chats select:[ :chat | chat miembros size = 2 ].! !!Whatsapp methodsFor: 'as yet unclassified' stamp: 'felipearana 6/8/2017 14:41'!chats	^ chats.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Whatsapp class	instanceVariableNames: ''!!Whatsapp class methodsFor: 'as yet unclassified' stamp: 'FelipeAarana 6/14/2017 13:09'!newFrom: unCelular	^ self new initializeConCelular: unCelular.! !Whatsapp subclass: #WhatsappAvanzado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!WhatsappAvanzado methodsFor: 'as yet unclassified' stamp: 'FelipeArana 5/16/2017 15:46'!enviarFoto: unaFoto a: unUsuario"TODO"! !!WhatsappAvanzado methodsFor: 'as yet unclassified' stamp: 'FelipeArana 5/16/2017 15:46'!enviarVideo: unVideo a: unUsuario"TODO"! !Whatsapp subclass: #WhatsappBasico	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!Object subclass: #WhatsappServer	instanceVariableNames: 'usuarios usuarioSistema'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WS-Chat'!!WhatsappServer methodsFor: 'initialization' stamp: 'FeliArana 6/30/2017 13:05'!initialize	usuarios := OrderedCollection new.	usuarioSistema := Usuario nombreUsuario: 'WS-Chat'.! !!WhatsappServer methodsFor: 'accessing' stamp: 'FeliArana 6/30/2017 14:29'!usuarioSistema	^usuarioSistema.! !!WhatsappServer methodsFor: 'accessing' stamp: 'FeliArana 6/17/2017 14:56'!usuarios: anOrderedCollection	usuarios := anOrderedCollection .! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 12:48'!usuarios	^ usuarios.! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/25/2017 21:06'!stopServer.	^ WAAdmin unregister: 'WS-Chat'! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/17/2017 16:32'!posiblesContactosMenos: usuarioX	"Obtiene el nombre de los posibles contactos que puede agregar usuarioX"	| posiblesContactos |	posiblesContactos := (usuarios reject: [ :unUsuario | unUsuario = usuarioX ])		difference: usuarioX contactos.	^ posiblesContactos collect: [ :contacto | contacto nombreUsuario ].! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/17/2017 16:38'!encontrarUsuario: unNombre	^ (usuarios select: [ :unUsuario | unUsuario nombreUsuario = unNombre ]) first.! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 11:48'!agregarUsuario: unUsuario.	usuarios add: unUsuario.! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 18:09'!agregarServicioMovil: aMobileService	serviciosMoviles add: aMobileService.! !!WhatsappServer methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/16/2017 14:59'!celulares	^ celulares.! !!WhatsappServer methodsFor: 'testing' stamp: 'FeliArana 6/25/2017 21:05'!runServer	| server app |	ZnZincStaticServerAdaptor startOn: 8080 andServeFilesFrom: FileSystem disk workingDirectory pathString.	server := ZnZincStaticServerAdaptor default server.	"server		logToTranscript;		debugMode: true."		app := WAAdmin register: WhatsappServerComponent asApplicationAt: 'WS-Chat'.	^ app.	"	app		addLibrary: JQDeploymentLibrary;		addLibrary: TBSDeploymentLibrary."	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WhatsappServer class	instanceVariableNames: 'uniqueInstance'!!WhatsappServer class methodsFor: 'instance creation' stamp: 'FeliArana 6/25/2017 21:03'!singleton	^ uniqueInstance ifNil: [ uniqueInstance := super new initialize ]! !!WhatsappServer class methodsFor: 'instance creation' stamp: 'FeliArana 7/4/2017 10:24'!new    ^ self error: 'WhatsappServer is a singleton -- send singleton instead'! !!WhatsappServer class methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/15/2017 15:12'!uniqueInstance: anObject	uniqueInstance := nil.! !WAComponent subclass: #WhatsappServerComponent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappServerComponent methodsFor: 'updating' stamp: 'FeliArana 6/30/2017 16:22'!updateRoot: anHtmlRoot	super updateRoot: anHtmlRoot.	anHtmlRoot title: 'Whatsapp Seaside Chat'.	anHtmlRoot stylesheet url: 'http://seaside.st/styles/main.css'.	anHtmlRoot link relationship: 'shortcut icon' ;url: 'https://whatsapp.com/favicon.png'.	anHtmlRoot stylesheet url: 'wschat/plugins/select2/select2.min.css'.	anHtmlRoot stylesheet url: 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'.	anHtmlRoot stylesheet url: 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css'.	anHtmlRoot javascript url: 'https://code.jquery.com/jquery-3.2.1.min.js'.	anHtmlRoot javascript url: 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js'.	anHtmlRoot javascript url: 'wschat/plugins/select2/select2.full.min.js'.	anHtmlRoot javascript url: 'wschat/plugins/bootstrap-filestyle/src/bootstrap-filestyle.min.js'.! !!WhatsappServerComponent methodsFor: 'settings' stamp: 'FeliArana 6/25/2017 20:46'!resetSystem	WhatsappServer uniqueInstance: nil.! !!WhatsappServerComponent methodsFor: 'settings' stamp: 'FeliArana 7/2/2017 20:27'!loadSystem: html	| user1 user2 user3 user4 serv1 serv2 serv3 serv4 celu1 celu2 celu3 celu4 usuarios |	user1 := Usuario nombreUsuario: 'Emi'.	user2 := Usuario nombreUsuario: 'Feli'.	user3 := Usuario nombreUsuario: 'Santi'.	user4 := Usuario nombreUsuario: 'Gasti'.	serv1 := ServicioMovil nombre: 'Movistar' costoLlamada: 2 poseeInternet: true.	serv2 := ServicioMovil nombre: 'Nextel' costoLlamada: 1 poseeInternet: true.	serv3 := ServicioMovil nombre: 'Claro' costoLlamada: 1 poseeInternet: true.	serv4 := ServicioMovil nombre: 'Claro' costoLlamada: 0.5 poseeInternet: true.	celu1 := CelularAvanzado		numero: 155751595		modelo: 'Sony X'		conServicio: serv1		duenio: user1.	celu2 := CelularAvanzado		numero: 151234567		modelo: 'LG G4'		conServicio: serv2		duenio: user2.	celu3 := CelularBasico		numero: 159876543		modelo: 'Nokia 1100'		conServicio: serv3		duenio: user3.	celu4 := CelularAvanzado		numero: 152457593		modelo: 'Iphone 7s'		conServicio: serv4		duenio: user4.	user1 celular: celu1.	user2 celular: celu2.	user3 celular: celu3.	user4 celular: celu4.		user1 fotoPerfil:'wschat/imagenes/fotoperfil1.jpg'.	user2 fotoPerfil:'wschat/imagenes/fotoperfil2.jpg'.	user3 fotoPerfil:'wschat/imagenes/fotoperfil3.jpg'.	user4 fotoPerfil:'wschat/imagenes/fotoperfil4.jpg'.		usuarios := OrderedCollection new.	usuarios		add: user1;		add: user2;		add: user3;		add: user4.	WhatsappServer singleton usuarios: usuarios! !!WhatsappServerComponent methodsFor: 'accessing' stamp: 'FeliArana 7/2/2017 20:01'!style	^ '*{ 	font-size: 16px;	font-family: "Roboto", sans-serif;}body{	background-image: 	url("wschat/fondogeneral.jpg");   overflow-x: hidden;}h1{	color: green;}#container {	background: white;	width:1024px;	height:650px;	position:absolute;	left:50%;	top:50%;	margin:-295px 0 0 -490px;}'! !!WhatsappServerComponent methodsFor: 'accessing' stamp: 'FeliArana 6/17/2017 21:04'!whatsappServer	^ WhatsappServer singleton.! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:12'!renderUsuariosOn: html	html		strong: 'Seleccionar usuario con celular cargado: ';		break.	html		table:			[ self whatsappServer usuarios do: [ :unUsuario | self renderUsuario: unUsuario on: html ] ].	html break.	html horizontalRule! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 13:24'!renderUsuario: unUsuario on: html	^ html		tableRow: [ html				tableData: [ self renderABM:unUsuario on:html ] ]! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/25/2017 20:46'!renderFooterOn: html	html anchor		callback: [ self resetSystem ];		with: 'Resetear sistema.'.	html space.	html space.	html space.	html space.	html anchor		callback: [ self loadSystem: html ];		with: 'Cargar usuarios de ejemplo.'.	html horizontalRule! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 15:46'!renderOperacionesOn: html	html anchor		callback: [ self renderNuevoUsuarioOn: html ];		with: 'Agregar nuevo usuario.'.	html break.	html horizontalRule.! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/19/2017 16:28'!renderTitleOn: html    html heading: [      html text: 'Bienvenido al sistema WS-Chat (Whatsapp Seaside Chat)' ].! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/19/2017 20:56'!renderBreadcrumOn: html	html		tbsBreadcrumb: [ html tbsBreadcrumbSection				beActive;				with: [ html anchor						id: #linkInicio;						callback: [ html requestContext redirectTo: 'WS-Chat' ];						with: 'Inicio' ] ]! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/19/2017 20:58'!renderWhatsappDeUsuario: unUsuario on: html	| editor |	editor := WhatsappMainUserWindowComponent newConUsuario: unUsuario.	self call: editor! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 13:25'!renderEditarUsuario: unUsuario on: html! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/21/2017 11:24'!renderContentOn: html	html div		id: #container;		with: [ self renderBreadcrumOn: html.			self renderTitleOn: html.			self renderOperacionesOn: html.			self renderUsuariosOn: html.			self renderFooterOn: html. ]! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 20:21'!renderABM: unUsuario on: html	html tbsRow		showGrid;		with: [ html tbsColumn				extraSmallSize: 6;				mediumSize: 4;				with: [ html anchor						callback: [ self renderWhatsappDeUsuario: unUsuario on: html ];						with:  unUsuario nombreUsuario ]."			html tbsColumn				extraSmallSize: 6;				mediumSize: 4;				with: [ html button						class: 'btn btn-warning';						with: [ html anchor								callback: [ self renderEditarUsuario: unUsuario on: html ];								with: 'Editar' ] ].			html tbsColumn				extraSmallSize: 6;				mediumSize: 4;				with: [ html button						class: 'btn btn-danger';						with: [ html anchor								style: 'color: black';								callback: [ self eliminarUsuario: unUsuario on: html ];								with: 'Eliminar' ] ]" ].html break.! !!WhatsappServerComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:11'!renderNuevoUsuarioOn: html	| editor |	editor := WhatsappAgregarUsuarioComponent new.	self call: editor.	editor usuario ifNotNil: [ self whatsappServer agregarUsuario: editor usuario ]! !WhatsappServerComponent subclass: #WhatsappAgregarUsuarioComponent	instanceVariableNames: 'modelo nombreUsuario numero tipoCelular poseeInternet usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:32'!tipoCelular: aString	tipoCelular := aString.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 20:05'!usuario	^ usuario.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:53'!numero: anInteger	numero:= anInteger.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:17'!nombreUsuario	^nombreUsuario.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:53'!nombreUsuario: aString	nombreUsuario := aString.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:21'!poseeInternet	^ poseeInternet.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/17/2017 21:03'!usuario: unUsuario	usuario := unUsuario! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:17'!numero	^ numero.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:28'!tipoCelular	^ tipoCelular.! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:53'!poseeInternet: aBoolean	poseeInternet := aBoolean .! !!WhatsappAgregarUsuarioComponent methodsFor: 'accessing' stamp: 'FeliArana 6/16/2017 19:17'!modelo	^ modelo.! !!WhatsappAgregarUsuarioComponent methodsFor: 'updating' stamp: 'FeliArana 6/18/2017 04:04'!updateRoot: anHtmlRoot    super updateRoot: anHtmlRoot.    anHtmlRoot stylesheet url: 'http://seaside.st/styles/main.css'! !!WhatsappAgregarUsuarioComponent methodsFor: 'actions' stamp: 'FelipeArana 6/15/2017 12:06'!cancel	usuario := nil.	self answer.! !!WhatsappAgregarUsuarioComponent methodsFor: 'actions' stamp: 'FeliArana 7/4/2017 16:22'!save	| celular servicio |	(self verificarNombreUsuarioDisponible)		ifTrue: [ self usuario: Usuario new.			self usuario nombreUsuario: nombreUsuario.			servicio := ServicioMovil nombre: 'X' costoLlamada: 'X' poseeInternet: poseeInternet.			celular := tipoCelular asClass				numero: numero				modelo: modelo				conServicio: servicio				duenio: usuario.			celular instalarWhatsapp.			usuario celular: celular.			self answer ]! !!WhatsappAgregarUsuarioComponent methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 16:15'!verificarNombreUsuarioDisponible	^ (WhatsappServer singleton usuarios select: [ :usr | usr nombreUsuario = nombreUsuario ]) isEmpty.! !!WhatsappAgregarUsuarioComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 20:22'!renderContentOn: html	html div		class: 'container';		with: [ html div				class: 'row';				with: [ html div						class: 'col-md-3 ';						with: [ html								form: [ html text: 'Nombre usuario: '.									html textInput										required;										on: #nombreUsuario of: self.									html break.									html text: 'Elegir su numero de celular: '.									html textInput										required;										on: #numero of: self.									html break.									html text: 'Eliga el tipo de celular: '.									html select										list: #(#CelularBasico #CelularAvanzado);										selected: nil;										callback: [ :selected | self tipoCelular: selected ].									html break.									html text: 'Posee Internet?: '.									html checkbox on: #poseeInternet of: self.									html break.									html submitButton										callback: [ self save ];										value: 'Guardar' ].							html								form: [ html submitButton										callback: [ self cancel ];										value: 'Cancelar' ] ] ] ]! !!WhatsappAgregarUsuarioComponent methodsFor: 'hooks' stamp: 'FeliArana 6/20/2017 05:26'!style	^ super style,' '.! !WhatsappServerComponent subclass: #WhatsappMainUserWindowComponent	instanceVariableNames: 'usuarioActual'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappMainUserWindowComponent methodsFor: 'accessing' stamp: 'FeliArana 7/2/2017 20:02'!style^ super style,'#linkInicio{	text-align:center;	display:block;} #container {	background: white;	width:1024px;	height:250px;	position:absolute;	left:50%;	top:50%;	margin:-295px 0 0 -490px;}'! !!WhatsappMainUserWindowComponent methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/20/2017 04:24'!linkAbrirChatOn: html	(usuarioActual contactosConWhatsapp isNotNil) 		ifTrue: [ html anchor				class: 'btn btn-primary btn-large';				callback: [ self renderVentanaChatOn: html ];				with: 'Ver chats' ]		ifFalse:[ html text: 'Agregar contactos con Whatsapp para iniciar conversaciones.']! !!WhatsappMainUserWindowComponent methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/20/2017 02:06'!linkAgregarContactoOn: html	html anchor		callback: [ self renderAgregarContactoOn: html ];		with: 'Agregar contacto'.	html break! !!WhatsappMainUserWindowComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:07'!renderAgregarContactoOn: html	| editor |		editor := WhatsappWindowAgregarContactoComponent newConUsuario: usuarioActual.	self call: editor.! !!WhatsappMainUserWindowComponent methodsFor: 'rendering' stamp: 'FeliArana 6/27/2017 13:14'!renderVentanaChatOn: html"este mensaje es cuando abrimos la primera vez la ventana de chat del usuario. "	| editor |	editor := WhatsappWindowChat newConUsuario: usuarioActual chatActual: nil.	self call: editor! !!WhatsappMainUserWindowComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 13:20'!renderTitleOn: html.		html heading: [ html text: 'Celular de: ' , usuarioActual nombreUsuario ].! !!WhatsappMainUserWindowComponent methodsFor: 'rendering' stamp: 'FeliArana 7/2/2017 13:22'!renderContentOn: html	html div		id: #container;		with: [ self renderBreadcrumOn: html.			self renderTitleOn: html.			self linkAgregarContactoOn: html.			usuarioActual celular poseeInternet				ifTrue: [ self linkAbrirChatOn: html ]				ifFalse: [ html text: 'Usted necesita internet para utilizar WS-Chat.' ] ]! !!WhatsappMainUserWindowComponent methodsFor: 'initialization' stamp: 'FeliArana 6/17/2017 21:07'!initialize: unUsuario	super initialize.	usuarioActual := unUsuario! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WhatsappMainUserWindowComponent class	instanceVariableNames: ''!!WhatsappMainUserWindowComponent class methodsFor: 'instance creation' stamp: 'FeliArana 6/17/2017 20:59'!newConUsuario: unUsuario	^ self new initialize: unUsuario! !WhatsappMainUserWindowComponent subclass: #WhatsappWindowAgregarContactoComponent	instanceVariableNames: 'nombreUsuario'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappWindowAgregarContactoComponent methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/19/2017 20:55'!renderArmarFormularioOn: html	html		form: [ self renderAgregarContactoOn: html ]! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/20/2017 02:02'!renderAgregarContactoOn: html	| posiblesContactos |	posiblesContactos := (super whatsappServer posiblesContactosMenos: usuarioActual) asArray.	html select		list: posiblesContactos;		selected: nil;		callback: [ :selected | self nombreUsuario: selected ].	html break.	html submitButton		callback: [ self save ];		value: 'Guardar'! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:07'!initialize: unUsuario.	super initialize.	usuarioActual := unUsuario.! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/20/2017 01:51'!save	| contacto |	contacto := super whatsappServer encontrarUsuario: nombreUsuario.	usuarioActual agregarContacto: contacto.	self answer! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 16:34'!cancel	self answer.! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:07'!agregarContacto: aString	usuarioActual contactos add: aString.! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 16:33'!nombreUsuario	^ nombreUsuario! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/20/2017 02:13'!renderContentOn: html	self renderBreadcrumOn: html.	(super whatsappServer posiblesContactosMenos: usuarioActual) isEmpty		ifTrue: [ html text: 'El servidor de Whatsapp no registra usuarios que puedas agregar como contacto'.			html break.			html anchor				callback: [ self answer ];				with: 'Volver.' ]		ifFalse: [ self renderArmarFormularioOn: html ]! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 21:07'!agregarContacto	usuarioActual celular contactos.! !!WhatsappWindowAgregarContactoComponent methodsFor: 'rendering' stamp: 'FeliArana 6/17/2017 16:33'!nombreUsuario: aString	nombreUsuario := aString.! !WhatsappMainUserWindowComponent subclass: #WhatsappWindowChat	instanceVariableNames: 'chatActual'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappWindowChat methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 13:52'!salirDelGrupoOn: html	| mensaje |	(chatActual miembros includes: usuarioActual)		ifTrue: [ chatActual sacarUsuario: usuarioActual.			mensaje := MensajeTexto texto: 'El usuario ' , usuarioActual nombreUsuario , ' se ha ido del grupo.' usuarioOrigen: WhatsappServer singleton usuarioSistema.			usuarioActual chats remove: chatActual .			chatActual miembros isEmpty"				ifTrue: [ chatActual := nil ]"				ifFalse: [ usuarioActual = chatActual admin						ifTrue: [ chatActual admin: chatActual miembros first.							mensaje texto: mensaje texto , ' El nuevo admin es ' , chatActual miembros first nombreUsuario ].					chatActual agregarMensaje: mensaje ].			].	self renderChatearEn: nil on: html! !!WhatsappWindowChat methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/27/2017 16:28'!nombresContactos	| contactos|	contactos:=(usuarioActual contactosConWhatsapp collect: [:u | u nombreUsuario ]).	^ contactos.! !!WhatsappWindowChat methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/4/2017 13:51'!enviarImagen: unArchivo a: unChat	| mensaje |	(self subirImagen: unArchivo)		ifTrue: [ mensaje := MensajeImagen imagen: unArchivo fileName usuarioOrigen: usuarioActual.			unChat agregarMensaje: mensaje			 ]! !!WhatsappWindowChat methodsFor: 'as yet unclassified' stamp: 'FeliArana 7/2/2017 20:40'!subirImagen: unArchivo	| file mbfs |	unArchivo contentType main = 'image'		ifTrue: [ file := FileStream fileNamed: unArchivo fileName.			mbfs := MultiByteFileStream newFrom: file.			mbfs nextPutAll: unArchivo rawContents.			^ true ]		ifFalse: [ ^ false ]! !!WhatsappWindowChat methodsFor: 'initialization' stamp: 'FeliArana 6/27/2017 13:16'!initializeConChat: unChat deUsuario: elUsuarioActual	super initialize: elUsuarioActual.	chatActual := unChat! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FelipeArana 6/29/2017 01:29'!renderOperacionesOn: html	html tbsRow		id: #operacionesUsuario;		showGrid;		with: [  html tbsPanel beSuccess						with: [ html								tbsPanelHeading: [ html tbsPanelTitle										level: 3;										with: 'Whatsapp de ' , usuarioActual nombreUsuario ].							html								tbsPanelBody: [ self renderNuevoChatNormalOn: html.									self renderNuevoChatGrupalOn: html.									self renderCambiarFotoPerfilOn:html ] ] ] ! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 7/4/2017 14:05'!renderEnviarMensajeOn: html	html form		id: #formEnviar;		with: [ self				renderLabel: ''				control: [ :id :script | 					html textInput autofocus						class: 'inimputado';						id: id;						callback: [ :value | 							value size > 0								ifTrue: [ usuarioActual agregarMensaje: value para: chatActual ] ].					html submitButton						class: 'btn btn-primary btn-large';						with: 'Enviar' ]				on: html ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FelipeArana 6/29/2017 01:47'!renderCambiarFotoPerfilOn: html	html form		multipart;		with: [ html fileUpload				class: 'filestyle';				attributeAt: 'data-input' put: 'false';				attributeAt: 'data-buttonText' put: 'Cambiar foto perfil';				attributeAt: 'data-buttonName' put: 'btn-primary';				attributeAt: 'data-iconName' put: 'glyphicon glyphicon-picture';				callback: [ :imagen | 					self subirImagen: imagen.					usuarioActual fotoPerfil: imagen fileName ].			html div				id: #enviarImagen;				with: [ html submitButton						class: 'btn';						with: 'Cambiar foto perfil' ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/28/2017 12:58'!renderConversacionOn: html	chatActual mensajes isEmpty		ifTrue: [ html div				id: #iniciarConversacion;				with: 'Envia un mensaje para iniciar la conversación :)' ]		ifFalse: [ chatActual mensajes do: [ :mensaje | self renderMensaje: mensaje on: html ] ].	html div		id: #nuevoMensaje;		script:			(html jQuery this load				html: [ (usuarioActual cantidadNuevosMensajesDe: chatActual) > 0						ifTrue: [ html text: 'true' ]						ifFalse: [ html text: ' ' ] ];				interval: 1 second).	self script! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/30/2017 13:10'!renderDivChatOn: html	html div		class: 'container-fluid';		with: [ self renderListaChatsOn: html.			chatActual isNotNil				ifTrue: [ self renderChatOn: html	"self renderSearchOn: html" ]				ifFalse: [ html heading						id: #selChat;						with: 'Selecciona un chat o empieza uno :)' ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/30/2017 16:17'!renderDatosPerfilOn: html	html image		class: 'fotoPerfil';		resourceUrl: usuarioActual fotoPerfil asString.	html image	id:#menuIcon;	resourceUrl: 'wschat/imagenes/menuicon.png'.	html text: usuarioActual nombreUsuario.	! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/28/2017 00:34'!renderLabel: aString control: aBlock on: html	| id |	html		fieldSet: [ html label				for: (id := html nextId);				with: aString.			html				span: [ aBlock						value: id						value:							((html jQuery this								parents: 'fieldset';								find: 'p') load								serialize:									(html jQuery this										parents: 'span';										find: ':input')) ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/27/2017 12:43'!renderChatearEn: unChat on: html	| editor |	editor := WhatsappWindowChat newConUsuario: usuarioActual chatActual: unChat.	self call: editor! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/21/2017 19:40'!renderIniciarChatGrupal: html	| editor | 	editor := WhatsappWindowIniciarChatGrupalComponent newConUsuario: usuarioActual.	self call: editor.! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/27/2017 16:55'!renderVerificarMensajesNuevosDe: unChat on: html	(usuarioActual cantidadNuevosMensajesDe: unChat) > 0		ifTrue: [ html div				id: #numeroMensajesNuevos;				with: (usuarioActual cantidadNuevosMensajesDe: unChat) asString ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FelipeArana 6/29/2017 01:40'!renderFormImagenEn: chat On: html	(usuarioActual celular whatsapp isKindOf: WhatsappAvanzado)		ifTrue: [ html form				id: #formEnviarImagen;				multipart;				with: [ html fileUpload						class: 'filestyle';						attributeAt: 'data-input' put: 'false';						attributeAt: 'data-buttonText' put: 'Subir Imágen';						attributeAt: 'data-buttonName' put: 'btn-primary';						attributeAt: 'data-iconName' put: 'glyphicon glyphicon-picture';						callback: [ :imagen | self enviarImagen: imagen a: chat ].					html div						id: #enviarImagen;						with: [ html submitButton								class: 'btn';								with: 'Enviar imagen' ] ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/30/2017 16:16'!renderOperacionesChatOn: html	chatActual isNotNil		ifTrue: [ html tbsRow				id: #operacionesChat;				showGrid;				with: [ html tbsPanel beDanger						with: [ html								tbsPanelHeading: [ html tbsPanelTitle										level: 3;										with: 'Operaciones del chat ' ].							html								tbsPanelBody: [ (chatActual isKindOf: ChatGrupal)										ifTrue: [ html form												id: #formCambiarFotoGrupo;												multipart;												with: [ html image														class: 'fotoPerfil';														resourceUrl: chatActual fotoGrupo fileName.													html fileUpload														class: 'subirFotoGrupo';														callback: [ :foto | 															self subirImagen: foto.															chatActual fotoGrupo: foto ].													html submitButton with: 'Cambiar foto' ].											html												form: [ html submitButton														class: 'btn-danger';														callback: [ self salirDelGrupoOn: html ];														with: 'Salir del grupo.' ].											html break.											html text: 'Administrador: ' , chatActual admin nombreUsuario ].									html div										id: #miembros;										with: [ html text: 'Miembros: '.											chatActual miembros do: [ :miembro | html text: miembro nombreUsuario , ' ' ].											"Esto es para enviar un archivo"											self renderFormImagenEn: chatActual On: html ] ] ] ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/27/2017 19:49'!renderNuevoChatNormalOn: html	| seleccionado |	html form		class: 'formActions';		with: [ html div				class: 'form-group formActions';				with: [ html text: 'Chatear con: '.					html select						class: 'form-control select2';						selected: nil;						list: self nombresContactos;						callback:								[ :selected | seleccionado := (WhatsappServer singleton usuarios select: [ :u | u nombreUsuario = selected ]) first ].					html submitButton						id: #botonChatearNormal;						class: 'btn btn-primary btn-sm';						callback: [ self renderChatearEn: (usuarioActual buscarChatCon: seleccionado) on: html ];						value: 'Chatear' ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 7/4/2017 13:32'!renderChatOn: html	self renderDatosChatActualOn: html.	html unorderedList		id: #chat;		class: 'chatul';		with: [ self renderConversacionOn: html ].	html div		class: 'col-xs-6  col-sm-6  col-md-8';		id: #enviar;		with: [ self renderEnviarMensajeOn: html ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FelipeArana 6/29/2017 02:43'!renderListaChatsOn: html	html div		class: 'responsive';		id: 'sidepanel';		with: [ html div				class: 'panel panel-default';				with: [ html div						class: 'panel-heading';						with: [ self renderDatosPerfilOn:html "html text: 'panel chats deh.'" ].					html div						id:#listaChats;						class: 'panel-body';						with: [ html								tbsNav: [ usuarioActual chats										do: [ :chat | 											html tbsNavItem												id: #linkChatsWrapper;												with: [ html div														id: #linkChat;														with: [ html anchor																callback: [ self renderChatearEn: chat on: html ];																with: (chat nombreChatPara: usuarioActual).															self renderVerificarMensajesNuevosDe: chat on: html.															html break ] ] ] ] ] ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/30/2017 13:10'!renderContentOn: html	self renderBreadcrumOn: html.	self renderOperacionesOn: html.	self renderOperacionesChatOn: html.	self renderDivChatOn:html.! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/28/2017 13:04'!renderMensaje: mensaje on: html	| clase |	mensaje usuarioOrigen = usuarioActual		ifTrue: [ clase := 'usuarioActual' ]		ifFalse: [ clase := 'contacto' ].	html listItem		id: 'mensaje' , mensaje horaEnviado;		with: [ html break.			html span				class: clase;				with: [ html div						id: 'mensajeTexto';						with: [ 							mensaje agregarVistoPor: usuarioActual.							html text: mensaje horaEnviado , ' '.							html text: mensaje usuarioOrigen nombreUsuario.							html break.							mensaje esImagen								ifTrue: [ html image id:#mensajeImagen; url: mensaje texto ]								ifFalse: [ html text: mensaje texto ] ] ] ]! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 6/27/2017 19:36'!renderNuevoChatGrupalOn: html	html anchor		id: #botonChatearGrupal;		class: 'btn btn-success';		callback: [ self renderIniciarChatGrupal: html ];		with: 'Nueva conversación grupal'.	html break! !!WhatsappWindowChat methodsFor: 'rendering' stamp: 'FeliArana 7/4/2017 13:32'!renderDatosChatActualOn: html	html div		id: #chatHeader;		class: 'panel panel-default';		with: [ html div				id: #datosChat;				class: 'panel-header';				with: [ html image						id: #chatIcon;						resourceUrl: 'wschat/imagenes/menuicon.png' ] ]! !!WhatsappWindowChat methodsFor: 'hooks' stamp: 'FeliArana 7/2/2017 20:36'!script	^ 'window.addEventListener(''load'', function() {	$(".select2").select2();		$(":file").filestyle({input: false});	    $("#menuIcon").click(function() {		        			 $("#operacionesUsuario").slideToggle("slide");    });    $("#chatIcon").click(function() {		        			 $("#operacionesChat").slideToggle("slide");    });document.getElementsByClassName("subirFotoGrupo").onchange = function() {    document.getElementById("formCambiarFotoGrupo").submit();};	var objDiv = document.getElementById(''chat'');	if( objDiv !!= null){		objDiv.scrollTop= objDiv.scrollHeight;	}	setInterval(function()	{							$(''#listaChats'').load(document.URL  +  '' #listaChats'');		myDivObj = document.getElementById("nuevoMensaje");						if ($(''#nuevoMensaje'').text() === "true") {			$(''#chat'').load(document.URL +  '' #chat'');			var objChat = document.getElementsByClassName(''chatul'');			objChat.scrollTop = objChat.scrollHeight;		}	}, 2000);	$("#modalChat").modal("show");	$(''#cerrarModal'').click(function() {		$(''#modalChat'').modal(''hide'');	});	$(".select2").select2();})'! !!WhatsappWindowChat methodsFor: 'accessing' stamp: 'FeliArana 7/2/2017 20:42'!style	^ super style		,			' #miembros, #formEnviarImagen{	margin-left: 30px;	display: inline-block;}.bootstrap-filestyle, .input-group{	display: inline-block;}.buttonText{	display:none;}.panel{    display: block;    margin: auto;	margin-bottom: 15px;	width:75%;}#operacionesUsuario, #operacionesChat{	width:39%;	float:left;	display:none;	position:top;}#operacionesChat{	margin-left:20%;	height: 50px;}#chatHeader{	height: 60px;	position:top;	width:200px;}.fotoPerfil{	border-radius:50% 50% 50% 50%;  	width:50px;	height:50px;}#menuIcon, #chatIcon{	float:right;	border-radius:50% 50% 50% 50%;  	width:40px;	height:40px;}#chatIcon{	margin-right:40%}.bootstrap-filestyle input-group{flex: 0 0 65%;}#enviarImagen{display: inline-block;   flex: 1;}.inputfile {	width: 0.1px;	height: 0.1px;	opacity: 0;	overflow: hidden;	position: absolute;	z-index: -1;}.inputfile + label {    font-size: 1.25em;    font-weight: 700;    color: white;    background-color: black;    display: inline-block;}.inputfile:focus + label,.inputfile + label:hover {    background-color: red;}.select2{	width: 175px;}.formActions{	width: 400px;}#botonChatearNormal{	margin-left: 5px;}#selChat{	color: red;	text-align: center;	font-weight: bold;	text-shadow: 0 1px 0 #ccc,	0 2px 0 #c9c9c9,	0 3px 0 #bbb,	0 4px 0 #b9b9b9,	0 5px 0 #aaa,	0 6px 1px rgba(0,0,0,.1),	0 0 5px rgba(0,0,0,.1),	0 1px 3px rgba(0,0,0,.3),	0 3px 5px rgba(0,0,0,.2),	0 5px 10px rgba(0,0,0,.25),	0 10px 10px rgba(0,0,0,.2),	0 20px 20px rgba(0,0,0,.15);}#nuevoMensaje{	display: none;}.container-fluid{	margin-top: 218px;	overflow:hidden 	text-align:center;	width:95%;	background-image: url("wschat/fondochat.jpg");}.inimputado{	background: rgba(255,255,255,0.1);	border: none;	font-size: 16px;	height: auto;	padding: 15px;	width: 75%;	background-color: #e8eeef;	color: green;	box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;}.responsive{	background-color: white;	width: 30%;	display:inline-block;	margin:10px 0;	border-radius:5px;}#iniciarConversacion{	font-weight: bold;	color: darkred;	margin-top: 250px;	font-style: italic;	font-size: 40px;}#modalChat, .modal-dialog {	width: 50%;} .modal-dialog,.modal-content {		height: 55%;}.modal-body {	max-height: calc(100% - 120px);}#cerrarModal{	float: right;	margin-right: 50px;}#sidepanel{	background-image: url("https://previews.123rf.com/images/1stchoice/1stchoice1602/1stchoice160200037/53541125-White-background-soft-light-grey-texture-Stock-Photo.jpg");	background-size: cover;	overflow-y: scroll;	height: 500px;	width: 350px;		float: left;	margin-top:75px}#linkChatsWrapper {	width: 300px;	overflow: hidden; /* add this to contain floated children */}#linkChat {	width: 150px;	float:left; }#numeroMensajesNuevos {	float: right; 	border-radius: 50%;	width: 28px;	height: 28px;	padding:2px;	background: #36bf2a;	border: 2px solid #36bf2a;	color: black;	text-align: center;	font: 17px Arial, sans-serif;}#chat{	background-image: url("http://scontent.cdninstagram.com/t51.2885-15/e35/11925897_718612938282417_1712675274_n.jpg?ig_cache_key=MTA4MzM4NDEwMDgzNzk0NjQ3Ng%3D%3D.2" );	//overflow-y: scroll ;	overflow-x: hidden;	width: 1200px;	height: 500px;	}#mensajeImagen{	max-width: 350px;	max-height: 350px;}#enviar{	margin-left: 18%;}li{	list-style-type: none;}#chat li{	height: auto;	margin-bottom: 10px;	clear: both;	padding-left: 10px;	padding-right: 10px;}#chat li span{	display: inline-block;	width: 400px;           	max-width: 400px;	background-color: white;	padding: 5px;	border-radius: 4px;	position: relative;	border-width: 1px;	border-style: solid;	border-color: grey;}#chat li span.contacto{	margin-left: 80px;	}#chat li span.usuarioActual{	margin-right: 120px;	}#chat li span.contacto:after{	content: "";	display: inline-block;	position: absolute;	left: -8.5px;	top: 7px;	height: 0px;	width: 0px;	border-top: 8px solid transparent;	border-bottom: 8px solid transparent;	border-right: 8px solid white;}#chat li span.contacto:before{	content: "";	display: inline-block;	position: absolute;	left: -9px;	top: 7px;	height: 0px;	width: 0px;	border-top: 8px solid transparent;	border-bottom: 8px solid transparent;	border-right: 8px solid black;}#chat li span.usuarioActual:after{	content: "";	display: inline-block;	position: absolute;	right: -8px;	top: 6px;	height: 0px;	width: 0px;	border-top: 8px solid transparent;	border-bottom: 8px solid transparent;	border-left: 8px solid #dbedfe;}#chat li span.usuarioActual:before{	content: "";	display: inline-block;	position: absolute;	right: -9px;	top: 6px;	height: 0px;	width: 0px;	border-top: 8px solid transparent;	border-bottom: 8px solid transparent;	border-left: 8px solid black;}#chat li span.usuarioActual{	float: right;	background-color: #dbedfe;}#mensajeTexto{	word-wrap: break-word}@media (max-width: 1841px) {	#sidepanel {		width: 300px;	}	#chat { 		width: 600px; 	}}@media (max-width: 1055px) {	#sidepanel {		width: 200px;	}	#chat { 		width: 600px; 	}}@media (max-width: 879px) {	* { font-size: 10px;}	#sidepanel {		float: left;		width: 100px;		height: 300px;	}	#chat {		height: 300px; 		width: 300px; 	}}'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WhatsappWindowChat class	instanceVariableNames: ''!!WhatsappWindowChat class methodsFor: 'instance creation' stamp: 'FeliArana 6/27/2017 12:43'!newConUsuario: usuarioActual chatActual: unChat.	^ self new initializeConChat: unChat deUsuario: usuarioActual.! !WhatsappWindowChat subclass: #WhatsappWindowIniciarChatGrupalComponent	instanceVariableNames: 'integrantes deh nombreGrupo fotoGrupo'	classVariableNames: ''	poolDictionaries: ''	category: 'OO1TPFinal2017-WhatsappComponents'!!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/26/2017 16:46'!agregarIntegrantes: unaColeccion	integrantes:= unaColeccion.! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'as yet unclassified' stamp: 'FelipeArana 6/26/2017 16:04'!contactosIntegrantesOn: html	 | posiblesContactos |	posiblesContactos:= usuarioActual contactosConWhatsapp collect: [ :contacto | contacto nombreUsuario ].	^posiblesContactos asArray! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'as yet unclassified' stamp: 'FeliArana 6/28/2017 00:51'!inicializarOn: html|chat|	usuarioActual chats isEmpty ifTrue: [ chat := ChatNormal new.  ] ifFalse:[ chat:= usuarioActual chats first].	super initializeConChat: chat  deUsuario: usuarioActual. 	super renderContentOn: html.! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'accessing' stamp: 'FeliArana 6/28/2017 14:52'!nombreGrupo	^ nombreGrupo	! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'accessing' stamp: 'FeliArana 6/28/2017 15:21'!nombreGrupo: unString	nombreGrupo := unString.! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'accessing' stamp: 'FeliArana 6/28/2017 15:36'!fotoGrupo: aString	fotoGrupo := aString! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'accessing' stamp: 'FeliArana 6/28/2017 14:52'!fotoGrupo	^ fotoGrupo	! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'hooks' stamp: 'FeliArana 6/27/2017 16:51'!script^ super script ! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'actions' stamp: 'FeliArana 6/30/2017 14:49'!save	| usuarios usuario |	usuarios := OrderedCollection new.		integrantes		do: [ :nombre | 			usuario := usuarioActual contactosConWhatsapp				detect: [ :contacto | contacto nombreUsuario == nombre ].			usuarios add: usuario ].	usuarios add: usuarioActual.	usuarioActual crearGrupoCon: usuarios nombreGrupo: nombreGrupo fotoGrupo: fotoGrupo. 	self answer	"		integrantes inspect."	"	self answer."! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'rendering' stamp: 'FelipeArana 6/28/2017 21:26'!renderVentanaNuevoChatGrupalOn: html	html heading: [ html text: 'Nuevo chat grupal.' ].	html div		class: 'col-md-6';		with: [ html div				class: 'form-group';				with: [ html						form						multipart;						with: [ html text: 'Nombre del grupo: '.							html textInput								required;								on: #nombreGrupo of: self.							html text: 'Foto grupal: '.							html fileUpload								required;								class: 'filestyle';								attributeAt: 'data-input' put: 'false';								attributeAt: 'data-buttonText' put: 'Subir Imágen';								attributeAt: 'data-buttonName' put: 'btn-primary';								attributeAt: 'data-iconName' put: 'glyphicon glyphicon-picture';								callback: [ :imagen | self fotoGrupo: imagen ] .							html break.							html text: 'Integrantes: '.							html multiSelect								class: 'form-control  select2';								required;								list: (self contactosIntegrantesOn: html);								callback: [ :collection | self agregarIntegrantes: collection ].							html submitButton								callback: [ self save ];								value: 'Guardar' ] ] ]! !!WhatsappWindowIniciarChatGrupalComponent methodsFor: 'rendering' stamp: 'FeliArana 6/28/2017 01:00'!renderContentOn: html	self inicializarOn: html.	html tbsModal		id: 'modalChat';		with: [ html tbsModalDialog				with: [ html						tbsModalContent: [ html button								id: #cerrarModal;								class: 'btn btn-danger';								with: [ html text: 'X' ].							self renderVentanaNuevoChatGrupalOn: html.							html break.							html break ] ] ]! !